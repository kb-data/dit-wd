gg <- gg + geom_histogram(binwidth=1, colour="black", aes(y=..density.., fill=..count..))
gg <- gg + scale_fill_gradient("Count", low="gray96", high="darkviolet")
gg <- gg + stat_function(fun=dnorm, color="red", size=1, args=list(mean=mean(sleep.survey$ess, na.rm=TRUE), sd=sd(sleep.survey$ess, na.rm=TRUE)))
gg+ggtitle('Figure 10: Distribution Epworth Sleepiness Scale')
qqnorm(sleep.survey$ess, main="Figure 11: QQPlot of Epworth Sleepiness Scale")
qqline(sleep.survey$ess, col=2)
tpskew.ess<-semTools::skew(sleep.survey$ess)
tpkurt.ess<-semTools::kurtosis(sleep.survey$ess)
scale.ess <-  scale(sleep.survey$ess)
range.scale.ess <- round(range(scale.ess, na.rm = TRUE), 2)
hist(scale.ess, breaks = 20, col='mediumorchid2', xlim=range(-3.35, 3.35), xlab='Scaled ESS Score', main='Figure 12: Histogram of Scaled ESS Score')
abline(v=c(-3.29, 3.29), col='red', lwd = 2)
is.na.fatigue <- sum(is.na(sleep.survey$fatigue)) #number of NAs
sum.fatigue <- sleep.survey %>% count(fatigue) #Number of each response
hist(sleep.survey$fatigue, breaks = 10, col='mediumorchid2', xlab='Fatigue felt in previous Month', main='Figure 13: Histogram of Fatigue felt in Previous Month', ylab='Number of Responses')
desc.anx.fatigue <- psych::describeBy(sleep.survey$anxiety, sleep.survey$fatigue)
desc.anx.fatigue
bar <- ggplot(sleep.survey, aes(fatigue, anxiety))
bar + stat_summary(fun.y = mean, geom = "bar", fill = "mediumorchid2", colour = "Black") + stat_summary(fun.data = mean_cl_normal, geom = "pointrange") + labs(x = "Level of Fatigue", y = "HADS Anxiety Score", title="Figure 14: Anxiety Level by Fatigue Felt in Previous Month")
num.na.depress <- sum(is.na(sleep.survey$depress))
num.depress <- len.tot - num.na.depress
range.depress <- range(sleep.survey$depress, na.rm = TRUE)
theme_update(plot.title = element_text(hjust = 0.5, face="bold"))
gg <- ggplot(sleep.survey, aes(x=sleep.survey$depress))
gg <- gg + labs(x="Epworth Sleepiness Scale")
gg <- gg + geom_histogram(binwidth=1, colour="black", aes(y=..density.., fill=..count..))
gg <- gg + scale_fill_gradient("Count", low="gray96", high="darkviolet")
gg <- gg + stat_function(fun=dnorm, color="red", size=1, args=list(mean=mean(sleep.survey$depress, na.rm=TRUE), sd=sd(sleep.survey$depress, na.rm=TRUE)))
gg+ggtitle('Figure 15: Distribution HADS Depression')
qqnorm(sleep.survey$depress, main="Figure 16: QQPlot of HADS Depression Score")
qqline(sleep.survey$depress, col=2)
tpskew.depress<-semTools::skew(sleep.survey$depress)
tpkurt.depress<-semTools::kurtosis(sleep.survey$depress)
scale.depress <-  scale(sleep.survey$depress)
range.scale.depress <- round(range(scale.depress, na.rm = TRUE), 2)
hist(scale.depress, breaks = 20, col='mediumorchid2', xlim=range(-3.35, 3.35), xlab='Scaled HADS Depression Score', main='Figure 17: Histogram of Scaled HADS Depression  Score')
abline(v=c(-3.29, 3.29), col='red', lwd = 2)
lev.anx.fall <- leveneTest(anxiety ~ trubslep, data = sleep.survey)
lev.anx.fall
ttest.anx.fall <- t.test(anxiety ~ trubslep, var.equal = FALSE, data = sleep.survey, paired = FALSE)
ttest.anx.fall
d.fall <-  2*ttest.anx.fall[[1]]/sqrt(ttest.anx.fall[[2]]) #Cohen's d
lev.anx.stay <- leveneTest(anxiety ~ trubstay, data = sleep.survey)
lev.anx.stay
ttest.anx.stay <- t.test(anxiety ~ trubstay, var.equal = TRUE, data = sleep.survey, paired = FALSE)
ttest.anx.stay
d.stay <-  2*ttest.anx.stay[[1]]/sqrt(ttest.anx.stay[[2]])
aov.anx.qual <- aov(sleep.survey$anxiety ~ sleep.survey$qualslp, data = sleep.survey)
summary(aov.anx.qual)
bar.anx.qual <- bartlett.test(sleep.survey$anxiety, sleep.survey$qualslp)
bar.anx.qual
posthoc.qual <- oneway(x = sleep.survey$qualslp, y = sleep.survey$anxiety, posthoc = 'Tukey')
library(foreign)
library(dplyr)
library(pander)
library(ggplot2)
library(psych)
library(semTools)
library(car)
library(userfriendlyscience)
#library(gmodels)
#library(plyr)
#library(knitr)
knitr::opts_chunk$set(echo = TRUE)
trips.read <- read_csv('C:\Users\Kate\OneDrive\Documents\R\WorkingwithData\wd_assign1\WWD_Assignment_Oct_2018\trips.txt')
trips.read <- read_csv('C:/Users/Kate/OneDrive/Documents/R/WorkingwithData/wd_assign1/WWD_Assignment_Oct_2018/trips.txt')
library('readr')
library('ggplot2')
library('rnoaa')
library('httr')
library('plyr')
library('jsonlite')
trips.read <- read_csv('C:/Users/Kate/OneDrive/Documents/R/WorkingwithData/wd_assign1/WWD_Assignment_Oct_2018/trips.txt')
trips.read <- read_csv('C:\Users\Kate\OneDrive\Documents\R\WorkingwithData\wd_assign1\WWD_Assignment_Oct_2018\googletransitdublinbusp20130315-1546\trips.txt')
trips.read <- read_csv('C:\\Users\\Kate\\OneDrive\\Documents\\R\\WorkingwithData\\wd_assign1\\WWD_Assignment_Oct_2018\\googletransitdublinbusp20130315-1546\\trips.txt')
trips.read
trips.read <- read_csv('C:\\Users\\Kate\\OneDrive\\Documents\\R\\WorkingwithData\\wd_assign1\\WWD_Assignment_Oct_2018\\googletransitdublinbusp20130315-1546\\trips.txt')
agency <- read_csv('googletransitdublinbusp20130315-1546\\agency.txt')
trips.df <- read_csv('googletransitdublinbusp20130315-1546\\trips.txt')
routes.df <- read_csv('googletransitdublinbusp20130315-1546\\routes.txt')
calendar.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar.txt')
calendar_dates.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar_dates.txt')
shapes.df <- read_csv('googletransitdublinbusp20130315-1546\\shapes.txt')
stop_times.df <- read_csv('googletransitdublinbusp20130315-1546\\stop_times.txt')
stops.df <- read_csv('googletransitdublinbusp20130315-1546\\stops.txt')
transfers.df <- read_csv('googletransitdublinbusp20130315-1546\\transfers.txt')
agency.df <- read_csv('googletransitdublinbusp20130315-1546\\agency.txt')
trips.df <- read_csv('googletransitdublinbusp20130315-1546\\trips.txt')
routes.df <- read_csv('googletransitdublinbusp20130315-1546\\routes.txt')
calendar.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar.txt')
calendar_dates.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar_dates.txt')
shapes.df <- read_csv('googletransitdublinbusp20130315-1546\\shapes.txt')
stops.df <- read_csv('googletransitdublinbusp20130315-1546\\stops.txt')
transfers.df <- read_csv('googletransitdublinbusp20130315-1546\\transfers.txt')
agency.df <- read_csv('googletransitdublinbusp20130315-1546\\agency.txt')
stop_times.df <- read_csv('googletransitdublinbusp20130315-1546\\stop_times.txt')
problems(...)
head(stop_times.df)
summary(trip.df)
trips.df <- read_csv('googletransitdublinbusp20130315-1546\\trips.txt')
routes.df <- read_csv('googletransitdublinbusp20130315-1546\\routes.txt')
calendar.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar.txt')
calendar_dates.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar_dates.txt')
shapes.df <- read_csv('googletransitdublinbusp20130315-1546\\shapes.txt')
stops.df <- read_csv('googletransitdublinbusp20130315-1546\\stops.txt')
transfers.df <- read_csv('googletransitdublinbusp20130315-1546\\transfers.txt')
agency.df <- read_csv('googletransitdublinbusp20130315-1546\\agency.txt')
stop_times.df <- read_csv('googletransitdublinbusp20130315-1546\\stop_times.txt') #might be issues with stop_times
summary(trips.df)
left_join(trips.df, routes.df, by = 'route_id)
left_join(trips.df, routes.df, by = 'route_id')
?left_join
library('readr')
library('ggplot2')
library('rnoaa')
library('httr')
library('plyr')
library('jsonlite')
library('dplyr)
library('readr')
library('ggplot2')
library('rnoaa')
library('httr')
library('plyr')
library('jsonlite')
library('dplyr')
left_join(trips.df, routes.df, by = 'route_id')
head(routes.df)
count(routes.df, route_short_name)
count(routes.df$route_short_name)
knitr::opts_chunk$set(echo = TRUE)
library('readr')
library('ggplot2')
library('rnoaa')
library('httr')
library('plyr')
library('jsonlite')
library('dplyr')
employ.read <- read_delim('dublin employment trends.txt', ':')
qplot(data = employ.read , x = Time , y = Employment, geom = 'line', xlab = "Quarterly Figures", ylab = "Trend", main = "Dublin Employment Trends Per Sector: 2006???2016") + facet_grid ( .~ Sector)
stations <- GET('https://api.jcdecaux.com/vls/v1/stations?apiKey=174980a157364085f718726daecb380b7aeaf5b4')
http_type(stations)
stations.df <- jsonlite::fromJSON(content(stations, "text"), simplifyVector = TRUE)
count(stations.df, vars = 'contract_name')
stations <- GET('https://api.jcdecaux.com/vls/v1/stations?apiKey=174980a157364085f718726daecb380b7aeaf5b4')
http_type(stations)
stations.df <- jsonlite::fromJSON(content(stations, "text"), simplifyVector = TRUE)
count(stations.df, vars = 'contract_name')
stations.df
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(corpcor)
library(GPArotation)
library(psych)
library(REdaS)
library(Hmisc)
library(corrplot)
library(ggcorrplot)
library(factoextra)
library(nFactors)
# Chunk 3
#We are using a .dat file from Field, Miles and Field Discovering Statistics with R, a survey on fear of statistics - raq.dat
#load data
raqData<-read.delim("raq.dat", header = TRUE)
#create a correlation matrix (these are just some methods)
raqMatrix<-cor(raqData)
round(raqMatrix, 2)
Hmisc::rcorr(as.matrix(raqData))
# Chunk 4
#Using ggcorrplot
p.mat <- ggcorrplot::cor_pmat(raqData)
ggcorrplot::ggcorrplot(raqMatrix, title = "Correlation matrix for RAQ data")
#Showing Xs for non-significant correlations
ggcorrplot::ggcorrplot(raqMatrix, title = "Correlation matrix for RAQ data", p.mat = p.mat, sig.level = .05)
#Showing lower diagonal
ggcorrplot::ggcorrplot(raqMatrix, title = "Correlation matrix for RAQ data", p.mat = p.mat, sig.level = .05, type="lower")
#Showing the co-efficients
ggcorrplot::ggcorrplot(raqMatrix, lab=TRUE, title = "Correlation matrix for RAQ data",  type="lower")
# Chunk 5
#Visualisation of correlations using circles
#corrplot parameters method = c("circle", "square", "ellipse", "number", "shade",
#"color", "pie")
#type = c("full", "lower", "upper"),
corrplot::corrplot(raqMatrix, method="circle")
corrplot::corrplot(raqMatrix, method="circle", type="upper")
#Visualisation using numbers
corrplot::corrplot(raqMatrix, method="number")
#Visualisation of significance levels at 0.05
res1 <- corrplot::cor.mtest(raqMatrix, conf.level = .95)
corrplot::corrplot(raqMatrix, p.mat = res1$p, type="lower", sig.level = .05)
#Showing p-value for non-significant results
corrplot(raqMatrix, p.mat = res1$p, type="lower",insig = "p-value")
# Chunk 6
# Chunk 7
#Bartlett's test
psych::cortest.bartlett(raqData)
psych::cortest.bartlett(raqMatrix, n = 2571)
#KMO (execute one of these):
REdaS::KMOS(raqData)
psych::KMO(raqData)
#Determinent (execute one of these):
det(raqMatrix)
det(cor(raqData))
# Chunk 8
#pcModel<-principal(dataframe/R-matrix, nfactors = number of factors, rotate = "method of rotation", scores = TRUE)
#On raw data using principal components analysis
#For PCA we know how many factors if is possible to find
#principal will work out our loadings of each variable onto each component, the proportion each component explained and the cummulative proportion of variance explai
pc1 <-  principal(raqData, nfactors = 23, rotate = "none")
pc1 <-  principal(raqData, nfactors = length(raqData), rotate = "none")
pc1#output all details of the PCA
psych::print.psych(pc1, cut = 0.3, sort = TRUE)
fa.diagram(pc1) #create a diagram showing the components and how the manifest variables load
fa.sort(pc1$loading) #Loadings of variables on to components
pc1$communality #Communalities of variables across components (will be one for PCA since all the variance is used)
plot(pc1$values, type = "b") #scree plot
pc1$Vaccounted
pc1$values #output eigenvalues
#Another way to look at eigen values plus variance explained (need to use princomp function fof PCA to get right class for use with factoextra dunctions)
pcf=princomp(raqData)
factoextra::get_eigenvalue(pcf)
factoextra::fviz_eig(pcf, addlabels = TRUE, ylim = c(0, 50))#Visualise the Eigenvalues
factoextra::fviz_pca_var(pcf, col.var = "black")
factoextra::fviz_pca_var(pcf, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
#VIsualise contribution of variables
var <- factoextra::get_pca_var(pcf)
corrplot::corrplot(var$contrib, is.corr=FALSE)
# Contributions of variables to PC1
factoextra::fviz_contrib(pcf, choice = "var", axes = 1, top = 10)
# Contributions of variables to PC2
factoextra::fviz_contrib(pcf, choice = "var", axes = 2, top = 10)
#PCA with rotation
pc2 <-  principal(raqData, nfactors = 4, rotate = "varimax")#Extracting 4 factors
psych::print.psych(pc2, cut = 0.3, sort = TRUE)
pc2$communality
# Chunk 9
#Factor Analysis
#Principal Axis Factoring
pc3 <- fa(raqMatrix, nfactors=4, obs=NA, n.iter=1, rotate="varimax", fm="pa")
psych::print.psych(pc3,cut=0.3, sort=TRUE)
fa.sort(pc3$loading)
fa.diagram(pc3)#create a diagram showing the factors and how the manifest variables load
plot(pc3$values, type = "b") #scree plot
pc3$Vaccounted#Variance accounted for
pc3$values #output eigenvalues
# Chunk 10
computerFear<-raqData[,c(6, 7, 10, 13, 14, 15, 18)]
statisticsFear <- raqData[, c(1, 3, 4, 5, 12, 16, 20, 21)]
mathFear <- raqData[, c(8, 11, 17)]
peerEvaluation <- raqData[, c(2, 9, 19, 22, 23)]
psych::alpha(computerFear)
psych::alpha(statisticsFear, keys = c(1, -1, 1, 1, 1, 1, 1, 1))
psych::alpha(mathFear)
psych::alpha(peerEvaluation)
psych::alpha(statisticsFear) #for illustrative pruposes
knitr::opts_chunk$set(echo = TRUE)
library('readr')
library('ggplot2')
library('rnoaa')
library('httr')
library('plyr')
library('jsonlite')
library('dplyr')
employ.read <- read_delim('dublin employment trends.txt', ':')
qplot(data = employ.read , x = Time , y = Employment, geom = 'line', xlab = "Quarterly Figures", ylab = "Trend", main = "Dublin Employment Trends Per Sector: 2006???2016") + facet_grid ( .~ Sector)
prop.read <- read_tsv('dublin property trends.txt')
qplot(data = prop.read , x = Time , y = Trend, geom = 'line', colour = Category, xlab = "Time", ylab = "Trend", main = "Dublin Property Trends: 2007 - 2016")
stations <- GET('https://api.jcdecaux.com/vls/v1/stations?apiKey=174980a157364085f718726daecb380b7aeaf5b4')
http_type(stations)
stations.df <- jsonlite::fromJSON(content(stations, "text"), simplifyVector = TRUE)
count(stations.df, vars = 'contract_name')
stations <- GET('https://api.jcdecaux.com/vls/v1/stations?apiKey=174980a157364085f718726daecb380b7aeaf5b4')
http_type(stations)
stations.df <- jsonlite::fromJSON(content(stations, "text"), simplifyVector = TRUE)
count(stations.df, vars = 'contract_name')
stations <- GET('https://api.jcdecaux.com/vls/v1/stations?apiKey=174980a157364085f718726daecb380b7aeaf5b4')
http_type(stations)
stations.df <- jsonlite::fromJSON(content(stations, "text"), simplifyVector = TRUE)
#count(stations.df, vars = 'contract_name')
bike <- GET('https://api.jcdecaux.com/vls/v1/stations?contract=Santander&apiKey=174980a157364085f718726daecb380b7aeaf5b4')
http_type(bike)
bike.df <- jsonlite::fromJSON(content(bike, "text"), simplifyVector = TRUE)
bike.df
bike.df <- bike.df[order(bike.df$name),]
str(bike.df)
qplot(available_bikes, name, data = bike.df , colour = status)
unzip('DublinBus.zip')
#loc.files=
trips.df <- read_csv('googletransitdublinbusp20130315-1546\\trips.txt')
routes.df <- read_csv('googletransitdublinbusp20130315-1546\\routes.txt')
calendar.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar.txt')
calendar_dates.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar_dates.txt')
shapes.df <- read_csv('googletransitdublinbusp20130315-1546\\shapes.txt')
stops.df <- read_csv('googletransitdublinbusp20130315-1546\\stops.txt')
transfers.df <- read_csv('googletransitdublinbusp20130315-1546\\transfers.txt')
agency.df <- read_csv('googletransitdublinbusp20130315-1546\\agency.txt')
stop_times.df <- read_csv('googletransitdublinbusp20130315-1546\\stop_times.txt') #might be issues with stop_times
left_join(routes.df, agency.df, by = "agency_id")
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(routes.df, agency.df, by = "agency_id")
stop_times.df
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id") %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  #left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id") %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id")# %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id") %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") #%>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id") %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")# %>% left_join(., shapes.df, by = "shape_id") %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id")# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
shape.id
shapes.id
shapes.df
trips.df
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id")# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") #%>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id")# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
#loc.files=
trips.df <- read_csv('googletransitdublinbusp20130315-1546\\trips.txt')
routes.df <- read_csv('googletransitdublinbusp20130315-1546\\routes.txt')
calendar.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar.txt')
calendar_dates.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar_dates.txt')
shapes.df <- read_csv('googletransitdublinbusp20130315-1546\\shapes.txt')
stops.df <- read_csv('googletransitdublinbusp20130315-1546\\stops.txt')
transfers.df <- read_csv('googletransitdublinbusp20130315-1546\\transfers.txt')
agency.df <- read_csv('googletransitdublinbusp20130315-1546\\agency.txt')
stop_times.df <- read_csv('googletransitdublinbusp20130315-1546\\stop_times.txt') #might be issues with stop_times
left_join(trips.df, routes.df, by = 'route_id')# %>% left_join(., stop_times.df, by = "trip_id") #%>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id")# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") #%>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id")# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
?left_join
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") #%>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id")# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id")# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c("",".shp"))# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c("",".shp"))# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., stop_times.df, by = "trip_id") %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))# %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")  %>% left_join(., stop_times.df, by = "trip_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp")) %>% left_join(., stops.df, by = "stop_id") %>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp")) %>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp")) #%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
left_join(trips.df, routes.df, by = 'route_id')# %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id")# %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))  %>% left_join(., stop_times.df, by = "trip_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))  %>% left_join(., stop_times.df, by = "trip_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))  %>% left_join(., stop_times.df, by = "trip_id")
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")  %>% left_join(., stop_times.df, by = "trip_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
stop_times.df
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id") # %>% left_join(., stop_times.df, by = "trip_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#   %>% left_join(., stops.df, by = "stop_id")
#what to do about transfers?
dim(stop_times.df)
dim(trips.df)
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")  %>% left_join(., stop_times.df, by = "trip_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id") #%>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
#%>% left_join(., agency.df, by = "agency_id")#
#what to do about transfers?
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id") %>% left_join(., shapes.df, by = "shape_id", suffix = c(".x",".shp"))
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id") %>% left_join(., shapes.df, by = "shape_id")
dim(shapes.df)
left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")# %>% left_join(., shapes.df, by = "shape_id")
#%>% left_join(., agency.df, by = "agency_id")#
#what to do about transfers?
shapes.df
#loc.files=
trips.df <- read_csv('googletransitdublinbusp20130315-1546\\trips.txt')
routes.df <- read_csv('googletransitdublinbusp20130315-1546\\routes.txt')
calendar.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar.txt')
calendar_dates.df <- read_csv('googletransitdublinbusp20130315-1546\\calendar_dates.txt')
shapes.df <- read_csv('googletransitdublinbusp20130315-1546\\shapes.txt')
stops.df <- read_csv('googletransitdublinbusp20130315-1546\\stops.txt')
transfers.df <- read_csv('googletransitdublinbusp20130315-1546\\transfers.txt')
agency.df <- read_csv('googletransitdublinbusp20130315-1546\\agency.txt')
stop_times.df <- read_csv('googletransitdublinbusp20130315-1546\\stop_times.txt') #might be issues with stop_times
bus.df <- left_join(trips.df, routes.df, by = 'route_id') %>%  left_join(., calendar.df, by = "service_id") %>% left_join(., calendar_dates.df, by = "service_id")  %>% left_join(., stop_times.df, by = "trip_id")  %>% left_join(., stops.df, by = "stop_id")# %>% left_join(., shapes.df, by = "shape_id")
#%>% left_join(., agency.df, by = "agency_id")#
#what to do about transfers?
bus.df
routes.df
?count
unique(routes.df$route_id)
count(routes.df$route_id)
length(unique(routes.df$route_id))
routes.df
count(routes.df,route_type)
routes.df
trips.df
trips.df
trips.df
length(unique(trips.df$trip_id))
trips.df
count(trips.df, route_id)
count(left_join(trips.df, routes.df, route_id) route_short_name)
left_join(trips.df, routes.df, route_id)
left_join(trips.df, routes.df, by = 'route_id')
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name)
count(left_join(trips.df, routes.df, by = 'route_id'), c(route_short_name, route_long_name)
count(left_join(trips.df, routes.df, by = 'route_id'), c(route_short_name, route_long_name))
count(left_join(trips.df, routes.df, by = 'route_id'), route_long_name)
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name)
plot(count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name))
plot(count(left_join(trips.df, routes.df, by = 'route_id'), route_long_name))
plot(count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name))
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name, sort = TRUE)
hist(count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name, sort = TRUE))
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name, sort = TRUE)
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name, , route_long_name, sort = TRUE)
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name, route_long_name, sort = TRUE)
length(unique(routes.df$route_id))
unique(routes.df$route_type)
length(unique(trips.df$trip_id)
calendar.df
calendar.df
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name, route_long_name, service_id, sort = TRUE)
calendar_dates.df
calendar.df
trips.df
left_join(trips.df, routes.df, by = 'route_id') %>% left_join(., shapes.df, by = 'shape_id')
count(left_join(trips.df, routes.df, by = 'route_id'), route_short_name, route_long_name, sort = TRUE)
calendar_dates.df
routes.df
?filter
filter(routes.df, route_short_name == '16)
filter(routes.df, route_short_name == 16)
filter(routes.df, route_short_name == 16)
left_join(trips.df, routes.df, by = 'route_id)
left_join(trips.df, routes.df, by = 'route_id')
left_join(trips.df, routes.df, by = 'route_id') %>% filter(., route_short_name == 16)
left_join(trips.df, routes.df, by = 'route_id') %>% filter(., route_short_name == 16) %>% count(., service_id)
left_join(trips.df, routes.df, by = 'route_id') %>% filter(., route_short_name == 16)# %>% count(., service_id)
left_join(trips.df, routes.df, by = 'route_id') %>% filter(., route_short_name == 16) %>% count(., service_id, direction_id)
stop_times.df
left_join(trips.df, stop_times.df, by = 'trip_id') %>% left_join(., routes.df, by = 'route_id') %>% filter(., route_short_name == 16)
left_join(trips.df, stop_times.df, by = 'trip_id') %>% left_join(., routes.df, by = 'route_id') %>% left_join(. ,stops.df, by = 'stop_id') %>% filter(., route_short_name == 16)
left_join(trips.df, stop_times.df, by = 'trip_id') %>% left_join(., routes.df, by = 'route_id') %>% left_join(. ,stops.df, by = 'stop_id') %>% filter(., route_short_name == 16) %>% select(., route_short_name, route_long_name)
left_join(trips.df, stop_times.df, by = 'trip_id') %>% left_join(., routes.df, by = 'route_id') %>% left_join(. ,stops.df, by = 'stop_id') %>% filter(., route_short_name == 16) #%>% select(., route_short_name, route_long_name)
route.16 <- left_join(trips.df, stop_times.df, by = 'trip_id') %>% left_join(., routes.df, by = 'route_id') %>% left_join(. ,stops.df, by = 'stop_id') %>% filter(., route_short_name == 16)
route.16 %>% select(., route_short_name, route_long_name)
route.16 <- left_join(trips.df, stop_times.df, by = 'trip_id') %>% left_join(., routes.df, by = 'route_id') %>% left_join(. ,stops.df, by = 'stop_id') %>% filter(., route_short_name == 16)
route.16
unique(route.16$pickup_type, route.16$drop_off_type)
unique(route.16$pickup_type)#, route.16$drop_off_type)
unique(route.16$pickup_type)
unique(route.16$drop_off_type)
install.packages('readODS')
library('readr')
library('ggplot2')
library('rnoaa')
library('httr')
library('plyr')
library('jsonlite')
library('dplyr')
library('readODS')
?readDS
?readODS
??readODS
url <- 'https://data.smartdublin.ie/dataset/8204be0a-6348-459e-96e9-65bb75600ec3/resource/384fe47a-2f25-4f52-8fc5-8e61899951e9/download/pedestrianfootfall2013.ods'
read_ods(path = url)
url <- 'https://data.smartdublin.ie/dataset/8204be0a-6348-459e-96e9-65bb75600ec3/resource/384fe47a-2f25-4f52-8fc5-8e61899951e9/download/pedestrianfootfall2013.ods'
download.file(url)
?download.file
url.footfall <- 'https://data.smartdublin.ie/dataset/8204be0a-6348-459e-96e9-65bb75600ec3/resource/384fe47a-2f25-4f52-8fc5-8e61899951e9/download/pedestrianfootfall2013.ods'
download.file(url.footfall)
url.footfall <- 'https://data.smartdublin.ie/dataset/8204be0a-6348-459e-96e9-65bb75600ec3/resource/384fe47a-2f25-4f52-8fc5-8e61899951e9/download/pedestrianfootfall2013.ods'
download.file(url.footfall, 'footfall_ods')
#read_ods(path = url)
read_ods(footfall_ods)
?read_ods
url.footfall <- 'https://data.smartdublin.ie/dataset/8204be0a-6348-459e-96e9-65bb75600ec3/resource/384fe47a-2f25-4f52-8fc5-8e61899951e9/download/pedestrianfootfall2013.ods'
download.file(url.footfall, 'footfall_ods.ods')
read_ods(footfall_ods.ods)
read_ods('footfall_ods.ods')
setwd("C:/Users/Kate/OneDrive/Documents/R/WorkingwithData/wd_assign1/WWD_Assignment_Oct_2018/googletransitdublinbusp20130315-1546")
read_ods('footfall_ods.ods')
read_ods('pedestrianfootfall2013')
read_ods('pedestrianfootfall2013.ods')
